{
  "hash": "f0dd4897c51e059cbdc60af0ab478902",
  "result": {
    "markdown": "---\ntitle: \"Learning Checks Lesson 22\"\n---\n\n\n\n\n## 22.1 (**Obj 20.3**)\n\nConsider these three data frames:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nOne <- sample(dag01, size=25)\nTwo <- do(10) * {\n  lm(y ~ x, data = sample(dag01, size=25)) %>%\n    coef()\n  }\nThree <- Two %>% \n  summarize(mx = mean(x), sx = sd(x))\n```\n:::\n\n\n1. Both `One` and `Two` have columns called `x`, but they stand for different things. Explain what the unit of observation is and what the values in `x` represent..\n2. `Three` does not have a column named `x`, but it is a summary of the `x` column from `Two`. What kind of summary.\n\n::: {.callout-tip}\n## Solution\n\n1. In `One`, the `x` column contains the simulated of the `x` variable from `dag01`. The unit of observation is a single case, for instance a person for whom observations were made of `x` and `y`. The simulation involves generating 25 rows of data: one row for each of 25 people.\n2. In `Two`, the `x` column is the regression coefficient on `x` from the simulation. Each row of `Two` corresponds to one trial in which regression is being performed on a sample of size 25 of simulated data from `dag01`. \n3. `Three` is a summary of the 10 trials in `Two`. The columns, named `mx` and `sx`, tell about the distribution of `x` across all the trials. \n:::\n\n\n--------\n\n## 22.2 (Obj 21.3)\n\n**Part 1**\n\nYou are going to write a *procedure* that automates the following process:\n\ni. sampling from a DAG, specifically `dag01`, using `sample()` with a size of 25.\nii. fitting a model `y ~ x` using `lm()`\niii. reporting the coefficient on `x` using `coef()`.\n\nCall the procedure `proc1()`.\n\nTo do this fill in the following template in your Rmd document:\n\n```r\nproc1 <- function() {\n  # your statements go here\n}\n```\n\nOnce you have `proc1()` ready, you can carry out the procedure by giving a simple command:\n\n```r\nproc1()\n```\n\n**Part 2**\n\nNow that you have `proc1()` ready and have tried it out, you are going to run the procedure 100 times repeatedly and look at the distribution in the `x` coefficient.\n\nOf course, you could laboriously give the command `proc1()` 5 times, and write down the `x` coefficient each time. Far better, though, to automate the process of repeating and collecting the `x` coefficient.\n\nYou can do this easily by using `do(5)` in conjunction with `proc1()`. \n\n1. What's the form in which the coefficients are collected when using `do()`?\n\n2. Is the `x` coefficient the same from trial to trial? Explain why or why not.\n\n3. Change your statement to run 100 trials rather than just 5, and to store the collected results in a data frame called `Trials`. Use appropriate graphics to display the distribution of the `x` coefficient. Summarize the distribution in a sentence or two.\n\n4. Create a consise summary of the `x` column of `Trials` using `summarize()` with `sd(x)` to calculate the standard deviation. Compare the size of the standard deviation to the graphical display in (3).\n\n### Solution\n\n**Part 1**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproc1 <- function() {\n  Dat <- sample(dag01, size=25)\n  Mod <- lm(y ~ x, data = Dat)\n  coefficients(Mod)\n}\n```\n:::\n\nor, more concisely\n\n::: {.cell}\n\n```{.r .cell-code}\nproc1 <- function() {\n  sample(dag01, size=25) %>%\n    lm(y ~ x, data = .) %>%\n    coef()\n}\n```\n:::\n\n\n**Part 2**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndo(5) * proc1()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"font-family: Courier; width: auto !important; \">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Intercept </th>\n   <th style=\"text-align:right;\"> x </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 4.301316 </td>\n   <td style=\"text-align:right;\"> 1.337751 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3.841627 </td>\n   <td style=\"text-align:right;\"> 1.572052 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3.852484 </td>\n   <td style=\"text-align:right;\"> 1.999481 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3.815152 </td>\n   <td style=\"text-align:right;\"> 1.789589 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3.919236 </td>\n   <td style=\"text-align:right;\"> 1.310799 </td>\n  </tr>\n</tbody>\n</table>\n`````\n:::\n:::\n\n\n1. The results of the five trials are collected into a data frame.\n\n2. The `x` coefficients varies from trial to trial.\n\nCollect 100 trials\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTrials <- do(100) * proc1()\n```\n:::\n\n\n3. An appropriate graphical display of the trials:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(Trials, aes(x)) + geom_density(fill=\"blue\", alpha=0.3)\n```\n\n::: {.cell-output-display}\n![](LC-lesson22_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nThe `x` coefficient varies from near 0.5 to near 2.5 in a bell-shaped form.\n\n4. Summarize the trials by the standard deviation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTrials %>% summarize(s = sd(x))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"font-family: Courier; width: auto !important; \">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> s </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 0.2416796 </td>\n  </tr>\n</tbody>\n</table>\n`````\n:::\n:::\n\n\nThe standard deviation is about 1/4 the width of the distribution.\n",
    "supporting": [
      "LC-lesson22_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}