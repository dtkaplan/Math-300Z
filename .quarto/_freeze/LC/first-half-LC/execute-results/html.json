{
  "hash": "0c44c79f73afe44b56480356a520b0fb",
  "result": {
    "markdown": "---\ntitle: \"Additional LC for first half of course\"\nauthor: \"Daniel Kaplan\"\n---\n\n\n## Tidying data\n\nThe US Department of Transportation has a program called the Fatality Analysis Reporting System. FARS has a web site which publishes data. Figure @fig-bear-ride-pants-1 shows partial screen shot of their web page.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![National statistics from the US on motor0-vehicle accident-related fatalities. Source: <https://www-fars.nhtsa.dot.gov/Main/index.aspx>.](images/fars-1.png){#fig-bear-ride-pants-1 width=368}\n:::\n:::\n\n\n\nFor several reasons, the table is not in tidy form.\n\n1. Some of the rows serve as headers for the next several rows, but don't contain any data. Identify several of those headers. -A- \"Motor vehicle traffic crashes\", \"Traffic crash fatalities\", \"Vehicle occupants\", \"Non-motorists\", \"Other national statistics\", \"National rates: fatalities\"\n\n2. In tidy data, all the entries in a column should describe the same kind of quantity. You can see that all of the columns contain numbers. But the numbers are not all the same kind of quantity. Referring to the 2016 column: \n    (a) What kind of thing is the number 34,439? -A- A number of crashes\n    (b) What kind of thing is 18,610? -A- A  number of drivers\n    (c) What kind of thing is 1.18? -A- A rate: fatalities per 100-million miles.\n\n3. In tidy data, there is a definite unit of observation that is the same kind of thing for every row. Give an example of two rows that are not the same kind of thing. -A- For example,  \"Registered vehicles\" and \"Licensed drivers\". The first is a count of cars,  the second a count of drivers.\n\n4. Identify a few rows that are summaries of other rows. Such summaries are not themselves a unit of observation. -A- \"Sub Total1\", \"Sub Total2\",  \"Total**\"\n\n--------\n\n## Graphics\n\nThe three graphs below show the distribution of weights broken down by sex. The violin layer is the same in each graph. Each graph has a coverage interval at one of these levels: 25% 50%, 80%, 95%. Which graph has which coverage interval? Which of the listed coverage intervals is not shown in any graph?\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'mosaic'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:Matrix':\n\n    mean\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ggplot2':\n\n    stat\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n:::\n\n::: {.cell-output-display}\n![](first-half-LC_files/figure-html/bee-sell-blanket-1-1.png){width=30%}\n:::\n\n::: {.cell-output-display}\n![](first-half-LC_files/figure-html/bee-sell-blanket-1-2.png){width=30%}\n:::\n\n::: {.cell-output-display}\n![](first-half-LC_files/figure-html/bee-sell-blanket-1-3.png){width=30%}\n:::\n:::\n\n\n--------\n\n## Violin plots\n\nThe graph below is a violin plot. Using a pencil and your intuition, add a few dozen dots to the graphic as they would appear in a data layer superimposed on the violin layer. The dots should be jittered and be consistent with the shape of the violins.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](first-half-LC_files/figure-html/cheetah-hit-plate-1-1.png){width=672}\n:::\n:::\n\n\n\n::: {.callout-note}\n## Solution\n\nWhere the violin is wider, there is a greater concentration of dots. In a jittered plot, the exact horizontal position of the dots has no significance.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](first-half-LC_files/figure-html/cheetah-hit-plate-answer-1.png){width=672}\n:::\n:::\n\n:::\n\n--------\n\n## Untidy data\n\nList what's not tidy about this table.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/planet-info.png){width=680}\n:::\n:::\n\n\n::: {.callout-note}\n## Solution\n\n- Units ought to be  in the codebook.\n- The \"length of year\" variable is in a mixture of units. Some rows are (Earth) days, others are (Earth) years.\n- The numbers have commas, which are intended for human consumption. Data tables are for machine consumption and the commas are a nuisancwe.\n- The $\\frac{1}{4}$ in the  \"length of year\" column is not a standard computer numeral. Write 365.25 instead.\n:::\n\n--------\n\n## Calculating new variables from old.\n\n\n\n\n\nTITLE GOES HERE: Often, a data scientist needs to calculate some new quantity from the quantities already available in a data table. Proper data computing software makes this easy to do in a manner that is clear even to an inexperienced reader. For example, the following statement will take a data frame named `Fatality_data` with the structure of  @tbl-pine-hit-pants and augment it with a new variable `total_fatalities` that gives the total number of fatalities in each year\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFARS <-\n  FARS %>%\n  mutate(total_fatalities = drivers + passengers + unknown)\n```\n:::\n\n::: {#tbl-pine-hit-pants .cell}\n::: {.cell-output-display}\n| year| crashes| drivers| passengers| unknown| miles| resident_pop| total_fatalities|\n|----:|-------:|-------:|----------:|-------:|-----:|------------:|----------------:|\n| 2016|   34439|   18610|       6407|      79|  3174|       323128|            25096|\n| 2015|   32539|   17613|       6213|      71|  3095|       320897|            23897|\n| 2014|   30056|   16470|       5766|      71|  3026|       318563|            22307|\n:::\n:::\n\n\nThe `mutate()` function does the work of creating the new variable. The text between the opening parenthesis and the corresponding closing parenthesis is the *argument* to `mutate()`, which gives the specifics of what to do.\n\nFor each of the following, write the argument for a `mutate()` statement that will produce the desired new variable. You can assume that `total_fatalities` is already one of the existing variables. (We created it above!)\n\n\na. Fatalities per crash.\n::: {.callout-note} ##Solution\n\n::: {.cell}\n\n```{.r .cell-code}\nfatalities_per_crash = total_fatalities / crash\n```\n:::\n\n:::\n\nb. Fatalities per *million* vehicle miles.\n::: {.callout-note} \n##Solution\n\n::: {.cell}\n\n```{.r .cell-code}\nfatalities_per_distance = total_fatalities / (miles * 1000)\n```\n:::\n\n\nDivide the total number of fatalities by the number of  vehicle miles travelled.\n\nWhy the multiplication by `1000`? Recall that `miles` is in *billions* of vehicle miles, while we want the units of `fatalities_per_distance` to be fatalities per *million* vehicle miles. The `1000`  performs the conversion from billions to millions.\n:::\n\nc. Number of crashes per *million* vehicle miles.\n::: {.callout-note} \n##Solution\n\n::: {.cell}\n\n```{.r .cell-code}\ncrashes_per_distance = crashes / (miles * 1000)\n```\n:::\n\n:::\nd. Referring back  to the original data shown in Figure \\@ref(fig:bear-ride-pants-1), you can see that the calculation of total fatalities in the introduction to this problem left out the number of motorcyclist and nonmotorist fatalities.  Modify the calculation of \ntotal fatalities to include these, assuming they are represented by `motorcyclist` and `nonmotorist` respectively.\n::: {.callout-note} ##Solution\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_fatalities = drivers + passengers + unknown +\n  motorcyclist + nonmotorist\n```\n:::\n\n:::\n\n--------=\n\n## Unit of observation\n\n\n\n\n\n\nThe data table below records activity at a neighborhood car repair shop.\n\n\n\n|mechanic |product        |  price|date       |\n|:--------|:--------------|------:|:----------|\n|Anne     |starter        | 170.00|2019-01-12 |\n|Beatrice |shock absorber |  78.42|2019-01-12 |\n|Anne     |alternator     | 385.95|2019-01-12 |\n|Clarisse |brake shoe     |  39.50|2019-01-12 |\n|Clarisse |brake shoe     |  39.50|2019-01-12 |\n|Beatrice |radiator hose  |  17.90|2019-02-12 |\n\n\n\nThe codebook for a data table should describe what is the unit of observation. For the purpose of this exercise, your job is to comment on each of the following possibilities and say why or why not this is plausibly the unit of observation.\n\na. a day. -A- There must be more to it than that, since the same date may be repeated with different values for the other variables. \nb. a mechanic. -A- No. The same mechanic appears multiple times, so the unit of observation is not simply a mechanic.\nc. a car part used in a repair. -A- Could be, for instance if every time a mechanic installs a part a new entry is added to the table describing the part, its price, the date, and the mechanic doing the work.\n\n--------\n\n## Graphics and data\n\n\n\n\n\n\n\nThe graphic below contains a single data layer. Four of the data points are annotated with letters in order to identify them specifically.\n\n\n\n::: {.cell layout-align=\"FALSE\"}\n::: {.cell-output-display}\n![](first-half-LC_files/figure-html/horse-dig-shoe-1-1.png){fig-align='FALSE' width=80%}\n:::\n:::\n\n\n**Part 1**\n\n1. Is the income level of \"a\" greater than \"b\"? -A- no\n2. Is the income level of \"d\" greater than \"a\"? -A- no\n3. Is the number of rooms greater for \"b\" than for \"a\"? -A- no\n4. Is the number of rooms greater for \"c\" than for \"a\"? -A- no\n\n**Part 2**\n\nHere is the data plotted in the figure.\n\n\n::: {.cell layout-align=\"FALSE\"}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: 10%; margin-right: auto;border-bottom: 0;\">\n <thead>\n  <tr>\n   <th> row </th>\n   <th> income </th>\n   <th> number_of_rooms </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td> 1 </td>\n   <td> 0.90 </td>\n   <td> 1 </td>\n  </tr>\n  <tr>\n   <td> 2 </td>\n   <td> 1.00 </td>\n   <td> 3 </td>\n  </tr>\n  <tr>\n   <td> 3 </td>\n   <td> 0.31 </td>\n   <td> 3 </td>\n  </tr>\n  <tr>\n   <td> 4 </td>\n   <td> 0.85 </td>\n   <td> 1 </td>\n  </tr>\n  <tr>\n   <td> 5 </td>\n   <td> 1.09 </td>\n   <td> 3 </td>\n  </tr>\n  <tr>\n   <td> 6 </td>\n   <td> 1.19 </td>\n   <td> 2 </td>\n  </tr>\n  <tr>\n   <td> 7 </td>\n   <td> 1.01 </td>\n   <td> 1 </td>\n  </tr>\n  <tr>\n   <td> 8 </td>\n   <td> 1.09 </td>\n   <td> 3 </td>\n  </tr>\n  <tr>\n   <td> 9 </td>\n   <td> 1.16 </td>\n   <td> 2 </td>\n  </tr>\n  <tr>\n   <td> 10 </td>\n   <td> 2.86 </td>\n   <td> 2 </td>\n  </tr>\n</tbody>\n<tfoot><tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> ... and so on for 2,765 rows altogether.</td></tr></tfoot>\n</table>\n\n`````\n:::\n:::\n\n\nThe points a, b, c, and d, are shown in the table. For each of a, b, c, d, say which row corresponds to the point. -A- a is row 8, b is row 7, c is row 2, d is row 1\n\n--------\n\n## \n",
    "supporting": [
      "first-half-LC_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}