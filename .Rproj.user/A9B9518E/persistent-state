build-last-errors="[]"
build-last-errors-base-dir=""
build-last-outputs="[]"
compile_pdf_state="{\"tab_visible\":false,\"running\":false,\"target_file\":\"\",\"output\":\"\",\"errors\":[]}"
files.monitored-path=""
find-in-files-state="{\"handle\":\"a3db3c66ac32439b8309075cd0063c16\",\"input\":\"model formula\",\"path\":\"~/Math-300R\",\"regex\":true,\"ignoreCase\":true,\"results\":{\"file\":[\"~/Math-300R/LC/LC-lesson19.qmd\",\"~/Math-300R/LC/LC-lesson28.qmd\",\"~/Math-300R/LC/LC-lesson30.qmd\",\"~/Math-300R/Student-notes/Student-notes-computing-summaries.Rmd.qmd\",\"~/Math-300R/Student-notes/Student-notes-computing-summaries.Rmd.qmd\",\"~/Math-300R/_Package/math300/man/compare_model_residuals.Rd\",\"~/Math-300R/_Textbook/Lessons-PDF.html\",\"~/Math-300R/_Textbook/More-detail.html\",\"~/Math-300R/_Textbook/More-detail.qmd\",\"~/Math-300R/_Textbook/Reading-notes-lesson-21.qmd\",\"~/Math-300R/_Textbook/Reading-notes-lesson-25.qmd\",\"~/Math-300R/_Textbook/Reading-notes-lesson-37.qmd\"],\"line\":[633,695,54,74,93,24,1218,334,302,219,51,139],\"lineValue\":[\"Surprisingly, an important model for starting the chain of comparisons *has no explanatory variable*. OR RATHER, WE MAKE UP AN EXPLANATORY variable. SHOW MEAN is a coefficient from such a model. Model formula: `y ~ 1`\",\"The model  `sat` ~ 1 + `expend` + `frac` attempts to capture how SAT scores depend both on `expend` and `frac`.  In interpreting the model, you can look at how the SAT scores would change with `expend` while holding `frac` constant.  That is, from the model formula, you can study the partial relatio...\",\"As we will see in Lesson 28, to reveal the direct causal link between engine power and fuel economy requires different choices for the model formula depending on which DAG you think might be relevant.\",\"But not all functions are designed with this convention in mind. In particular, in `lm()` the first argument should be the model formula, e.g. `net ~ age`. The data frame that will be used in fitting the model is the second argument. So, in `lm(net ~ age, data=.)` the dot is directing the pipeline t...\",\"Regression models have their own, internal system for comparing groups. You express your wish to compare groups by using the model formula. The simple formula `net ~ age` does not instruct `lm()` to compare the sexes. Instead, you would use the formula `net ~ age*sex`. For instance,\",\"\\\\item{\\\\ldots}{One or more model formulas, all with the same response variable.}\",\"...AG has implications for which model formulas can or cannot reveal the hypothesized causal mechanism.</p>\",\"<p>To get the confidence interval on this simple-minded prediction, we point out that the value of the mean time is the same as the coefficient from the model <code>time ~ 1</code>. Letâ€™s fit that model formula to the <code>close_rows</code> and look at the coefficient and confidence interval.</p>\",\"To get the confidence interval on this simple-minded prediction, we point out that the value of the mean time is the same as the coefficient from the model `time ~ 1`. Let's fit that model formula to the `close_rows` and look at the coefficient and confidence interval.\",\"...AG has implications for which model formulas can or cannot reveal the hypothesized causal mechanism.\",\"...and `father`). An appropriate model formula is `height ~ mother + father`. We use the model-training function`lm()` to transform the model formula and the data into a model.\",\"Model formula | traditional name\"],\"matchOn\":[[195],[252],[135],[123],[125],[26],[33],[197],[183],[33],[33,136],[0]],\"matchOff\":[[208],[265],[148],[136],[138],[39],[46],[210],[196],[46],[46,149],[13]],\"replaceMatchOn\":[[],[],[],[],[],[],[],[],[],[],[],[]],\"replaceMatchOff\":[[],[],[],[],[],[],[],[],[],[],[],[]]},\"running\":false,\"replace\":false,\"preview\":false,\"gitFlag\":true,\"replacePattern\":\"\"}"
imageDirtyState="1"
saveActionState="0"
